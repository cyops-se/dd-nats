{"version":3,"sources":["webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./node_modules/core-js/modules/es.set.js","webpack:///./node_modules/core-js/modules/es.string.search.js","webpack:///./src/views/TagBrowser.vue?b587","webpack:///src/views/TagBrowser.vue","webpack:///./src/views/TagBrowser.vue?3193","webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///../../../src/components/VTreeview/VTreeview.ts","webpack:///./src/views/TagBrowser.vue","webpack:///../../../src/components/VGrid/grid.ts","webpack:///../../../src/components/VGrid/VContainer.ts"],"names":["module","exports","Object","is","x","y","collection","collectionStrong","init","this","arguments","length","undefined","fixRegExpWellKnownSymbolLogic","anObject","requireObjectCoercible","sameValue","regExpExec","SEARCH","nativeSearch","maybeCallNative","regexp","O","searcher","call","RegExp","String","res","done","value","rx","S","previousLastIndex","lastIndex","result","index","_vm","_h","$createElement","_c","_self","attrs","scopedSlots","_u","key","fn","staticClass","_v","_s","progid","proxy","items","loadBranch","filter","search","ref","item","open","file","on","$event","activated","files","model","callback","$$v","tree","expression","staticRenderFns","position","breadcrumbs","tag","tagoutline","tags","delimiter","baseMixins","mixins","VTreeviewNodeProps","activatable","activeClass","type","default","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","selectionType","validator","v","includes","VTreeviewNode","name","inject","treeview","props","level","parentIsDisabled","data","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","computed","disabled","children","child","text","scopedProps","leaf","selected","indeterminate","active","computedIcon","hasChildren","created","beforeDestroy","methods","checkChildren","Promise","resolve","genLabel","$scopedSlots","label","slot","genPrependSlot","prepend","genAppendSlot","append","genContent","genToggle","VIcon","class","click","e","genCheckbox","genLevel","genNode","setTextColor","genChild","genChildrenWrapper","map","c","genTransition","render","h","match","i","filterTreeItems","excluded","provide","dense","hoverable","multipleActive","openAll","returnObject","activeCache","nodes","openCache","selectedCache","Set","excludedItems","watch","handler","oldKeys","k","newKeys","getKeys","diff","oldSelectedCache","emitSelected","deep","getValue","mounted","$slots","updateAll","keys","buildTree","parent","oldNode","hasOwnProperty","vnode","node","calculateState","add","state","counts","Boolean","emitOpen","emitActive","emitNodeCache","handleNodeCacheWatcher","old","updateFn","emitFn","getDescendants","descendants","getParents","parents","register","unregister","isParent","updateActive","delete","updateSelected","isForced","changed","descendant","calculated","updateOpen","updateVnodeState","isExcluded","has","themeClasses","component","VCol","VContainer","VRow","VTreeview","functional","id","classes","fluid","mergeData","Array"],"mappings":"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","file":"js/views-TagBrowser.3269062b.js","sourcesContent":["// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","'use strict';\nvar collection = require('../internals/collection');\nvar collectionStrong = require('../internals/collection-strong');\n\n// `Set` constructor\n// https://tc39.es/ecma262/#sec-set-objects\nmodule.exports = collection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar sameValue = require('../internals/same-value');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@search logic\nfixRegExpWellKnownSymbolLogic('search', 1, function (SEARCH, nativeSearch, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.es/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = requireObjectCoercible(this);\n      var searcher = regexp == undefined ? undefined : regexp[SEARCH];\n      return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative(nativeSearch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"id\":\"browser-view\",\"fluid\":\"\",\"tag\":\"section\"}},[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('material-card',{attrs:{\"color\":\"secondary\",\"full-header\":\"\"},scopedSlots:_vm._u([{key:\"heading\",fn:function(){return [_c('div',{staticClass:\"pa-6 white--text\"},[_c('div',{staticClass:\"text-h4 font-weight-light\"},[_vm._v(\" OPC DA Tag Browser \")]),_c('div',{staticClass:\"text-subtitle-1\"},[_vm._v(\" \"+_vm._s(_vm.progid)+\" \")])])]},proxy:true}])},[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[[_c('v-treeview',{attrs:{\"items\":_vm.items,\"load-children\":_vm.loadBranch,\"dense\":\"\",\"hoverable\":\"\",\"open-on-click\":\"\",\"item-key\":\"path\",\"filter\":_vm.filter,\"search\":_vm.search},scopedSlots:_vm._u([{key:\"prepend\",fn:function(ref){\nvar item = ref.item;\nvar open = ref.open;\nreturn [(!item.file)?_c('v-icon',[_vm._v(\" \"+_vm._s(open ? 'mdi-folder-open' : 'mdi-folder')+\" \")]):_c('v-icon',{on:{\"click\":function($event){return _vm.activated(item)}}},[_vm._v(\" \"+_vm._s(_vm.files[item.file])+\" \")])]}}]),model:{value:(_vm.tree),callback:function ($$v) {_vm.tree=$$v},expression:\"tree\"}})]],2)],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container\r\n    id=\"browser-view\"\r\n    fluid\r\n    tag=\"section\"\r\n  >\r\n    <v-row>\r\n      <v-col cols=\"12\">\r\n        <material-card\r\n          color=\"secondary\"\r\n          full-header\r\n        >\r\n          <template #heading>\r\n            <div class=\"pa-6 white--text\">\r\n              <div class=\"text-h4 font-weight-light\">\r\n                OPC DA Tag Browser\r\n              </div>\r\n\r\n              <div class=\"text-subtitle-1\">\r\n                {{ progid }}\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <v-row>\r\n            <v-col cols=\"12\">\r\n              <template>\r\n                <v-treeview\r\n                  v-model=\"tree\"\r\n                  :items=\"items\"\r\n                  :load-children=\"loadBranch\"\r\n                  dense\r\n                  hoverable\r\n                  open-on-click\r\n                  item-key=\"path\"\r\n                  :filter=\"filter\"\r\n                  :search=\"search\"\r\n                >\r\n                  <template v-slot:prepend=\"{ item, open }\">\r\n                    <v-icon v-if=\"!item.file\">\r\n                      {{ open ? 'mdi-folder-open' : 'mdi-folder' }}\r\n                    </v-icon>\r\n                    <v-icon\r\n                      v-else\r\n                      @click=\"activated(item)\"\r\n                    >\r\n                      {{ files[item.file] }}\r\n                    </v-icon>\r\n                  </template>\r\n                </v-treeview>\r\n              </template>\r\n            </v-col>\r\n          </v-row>\r\n        </material-card>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\n  import ApiService from '@/services/api.service'\r\n  export default {\r\n    name: 'TagBrowserView',\r\n    data: () => ({\r\n      position: '',\r\n      breadcrumbs: [],\r\n      files: {\r\n        tag: 'mdi-tag',\r\n        tagoutline: 'mdi-tag-outline',\r\n      },\r\n      items: [],\r\n      progid: '',\r\n      tags: [],\r\n      tree: [],\r\n      search: '',\r\n      delimiter: '.',\r\n    }),\r\n\r\n    computed: {\r\n      filter () {\r\n        return this.caseSensitive\r\n          ? (item, search, textKey) => item[textKey].indexOf(search) > -1\r\n          : undefined\r\n      },\r\n    },\r\n\r\n    created () {\r\n      // this.refresh()\r\n    },\r\n\r\n    mounted () {\r\n      this.loadSettings()\r\n      this.refresh()\r\n      this.rootSelected()\r\n    },\r\n\r\n    methods: {\r\n      loadSettings () {\r\n        ApiService.get('data/key_value_pairs/field/key/tagpathdelimiter')\r\n          .then(response => {\r\n            if (response.data) this.delimiter = response.data[0].value\r\n            console.log('delimiter: ', this.delimiter)\r\n          }).catch(response => {\r\n            console.log('Failed to get delimiter: ' + response.message)\r\n          })\r\n      },\r\n\r\n      refresh () {\r\n        ApiService.get('opc/tag/names')\r\n          .then(response => {\r\n            this.tags = response.data\r\n            console.log('tags: ', JSON.stringify(this.tags))\r\n          }).catch(response => {\r\n            console.log('ERROR response: ' + response.message)\r\n            this.$notification.error('Failed to get tags: ' + response.message)\r\n          })\r\n      },\r\n\r\n      rootSelected () {\r\n        console.log('root selected')\r\n        this.items = []\r\n        ApiService.get('opc/server/' + this.$route.params.serverid + '/root')\r\n          .then(response => {\r\n            if (response.data.branches) {\r\n              for (var i = 0; i < response.data.branches.length; i++) {\r\n                var item = { name: response.data.branches[i], children: [], path: response.data.branches[i] }\r\n                this.items.push(item)\r\n              }\r\n            }\r\n\r\n            if (response.data.leaves) {\r\n              for (i = 0; i < response.data.leaves.length; i++) {\r\n                this.items.push({ name: response.data.leaves[i], file: 'tag' })\r\n              }\r\n            }\r\n            this.tree = this.tags\r\n          }).catch(response => {\r\n            console.log('ERROR: ' + response.message)\r\n          })\r\n      },\r\n\r\n      tagSelected (selecteditems) {\r\n        if (selecteditems && selecteditems.length > 0 && selecteditems.length !== this.tags.length) {\r\n          console.log('posting tags: ' + JSON.stringify(selecteditems))\r\n          ApiService.post('opc/tag/names', selecteditems)\r\n            .then(({ data }) => {\r\n              console.log('new tags response: ' + JSON.stringify(data))\r\n            }).then(data => {\r\n              this.refresh()\r\n            }).catch(response => {\r\n              console.log('new tags ERROR response: ' + response.message)\r\n            })\r\n        }\r\n      },\r\n\r\n      activated (item) {\r\n        console.log('item activated' + JSON.stringify(item))\r\n        if (item.file === 'tag') {\r\n          // delete\r\n          ApiService.delete('data/opc_tags/field/name/' + encodeURIComponent(item.path))\r\n            .then(({ data }) => {\r\n              console.log('deleted tag response: ' + JSON.stringify(data))\r\n            }).then(data => {\r\n              this.refresh()\r\n            }).catch(response => {\r\n              console.log('deleted tag ERROR response: ' + response.message)\r\n            })\r\n        } else {\r\n          // add\r\n          var tag = item.path.replaceAll('/', this.delimiter)\r\n          ApiService.post('opc/tag/names', [tag])\r\n            .then(({ data }) => {\r\n              console.log('new tags response: ' + JSON.stringify(data))\r\n            }).then(data => {\r\n              this.refresh()\r\n            }).catch(response => {\r\n              console.log('new tags ERROR response: ' + response.message)\r\n            })\r\n        }\r\n\r\n        item.file = item.file === 'tag' ? 'tagoutline' : 'tag'\r\n      },\r\n\r\n      async loadBranch (item) {\r\n        console.log('branch item: ' + JSON.stringify(item))\r\n        var branch = item.path.replaceAll('/', '.')\r\n        console.log('loading', branch)\r\n        let uri = 'opc/server/' + this.$route.params.serverid + '/list/' + branch\r\n        if (branch === 'root') uri = 'opc/server/' + this.$route.params.serverid + '/root'\r\n        return ApiService.get(uri)\r\n          .then(response => {\r\n            if (response.data.branches) {\r\n              for (var i = 0; i < response.data.branches.length; i++) {\r\n                var itemname = response.data.branches[i]\r\n                var path = item.path + '/' + itemname\r\n                item.children.push({ name: itemname, children: [], path: path })\r\n              }\r\n            }\r\n\r\n            if (response.data.leaves) {\r\n              for (i = 0; i < response.data.leaves.length; i++) {\r\n                itemname = response.data.leaves[i]\r\n                path = item.path + '/' + itemname\r\n                var icon = 'tagoutline'\r\n\r\n                for (var tn = 0; tn < this.tags.length; tn++) {\r\n                  if (this.tags[tn] === path) {\r\n                    icon = 'tag'\r\n                    break\r\n                  }\r\n                }\r\n                item.children.push({ name: itemname, file: icon, path: path })\r\n              }\r\n            }\r\n          }).then(data => {\r\n            this.tree = this.tags\r\n          }).catch(response => {\r\n            console.log('ERROR: ' + response.message)\r\n          })\r\n      },\r\n    },\r\n  }\r\n</script>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TagBrowser.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TagBrowser.vue?vue&type=script&lang=js&\"","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String as PropType<'leaf' | 'independent'>,\n    default: 'leaf',\n    validator: (v: string) => ['leaf', 'independent'].includes(v),\n  },\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    } as PropValidator<Record<string, unknown> | null>,\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): boolean {\n      return (\n        getObjectValueByPath(this.item, this.itemDisabled) ||\n        (this.parentIsDisabled && this.selectionType === 'leaf')\n      )\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      const children = getObjectValueByPath(this.item, this.itemChildren)\n      return children && children.filter((child: any) => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)))\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode () {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open)\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any, parentIsDisabled: boolean) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper () {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(c => this.genChild(c, this.disabled))]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildren = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n","import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  filterTreeItem,\n} from './util/filterTreeItems'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    dense: Boolean,\n    filter: Function as PropType<TreeviewItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    level: -1,\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    const getValue = (key: string | number) => this.returnObject ? getObjectValueByPath(key, this.itemKey) : key\n\n    this.buildTree(this.items)\n\n    for (const value of this.value.map(getValue)) {\n      this.updateSelected(value, true, true)\n    }\n\n    for (const active of this.active.map(getValue)) {\n      this.updateActive(active, true)\n    }\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren, [])\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = node\n\n        if (children.length) {\n          const { isSelected, isIndeterminate } = this.calculateState(key, this.nodes)\n\n          node.isSelected = isSelected\n          node.isIndeterminate = isIndeterminate\n        }\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected && (this.selectionType === 'independent' || node.children.length === 0)) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: string | number, state: Record<string | number, NodeState>) {\n      const children = state[node].children\n      const counts = children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n\n        return counts\n      }, [0, 0])\n\n      const isSelected = !!children.length && counts[0] === children.length\n      const isIndeterminate = !isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return {\n        isSelected,\n        isIndeterminate,\n      }\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean, isForced = false) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        for (const descendant of this.getDescendants(key)) {\n          if (!getObjectValueByPath(this.nodes[descendant].item, this.itemDisabled) || isForced) {\n            this.nodes[descendant].isSelected = isSelected\n            this.nodes[descendant].isIndeterminate = false\n            changed.set(descendant, isSelected)\n          }\n        }\n\n        const calculated = this.calculateState(key, this.nodes)\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = calculated.isIndeterminate\n        changed.set(key, isSelected)\n\n        for (const parent of this.getParents(key)) {\n          const calculated = this.calculateState(parent, this.nodes)\n          this.nodes[parent].isSelected = calculated.isSelected\n          this.nodes[parent].isIndeterminate = calculated.isIndeterminate\n          changed.set(parent, calculated.isSelected)\n        }\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.filter(item => {\n        return !this.isExcluded(getObjectValueByPath(item, this.itemKey))\n      }).map(item => {\n        const genChild = VTreeviewNode.options.methods.genChild.bind(this)\n\n        return genChild(item, getObjectValueByPath(item, this.itemDisabled))\n      })\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n","import { render, staticRenderFns } from \"./TagBrowser.vue?vue&type=template&id=0e63c880&\"\nimport script from \"./TagBrowser.vue?vue&type=script&lang=js&\"\nexport * from \"./TagBrowser.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VTreeview } from 'vuetify/lib/components/VTreeview';\ninstallComponents(component, {VCol,VContainer,VIcon,VRow,VTreeview})\n","// Types\nimport Vue, { VNode } from 'vue'\n\nexport default function VGrid (name: string) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div',\n      },\n    },\n\n    render (h, { props, data, children }): VNode {\n      data.staticClass = (`${name} ${data.staticClass || ''}`).trim()\n\n      const { attrs } = data\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {}\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false\n\n          const value = attrs[key]\n\n          // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n          if (key.startsWith('data-')) {\n            data.attrs![key] = value\n            return false\n          }\n\n          return value || typeof value === 'string'\n        })\n\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {}\n        data.domProps.id = props.id\n      }\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n","import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n"],"sourceRoot":""}